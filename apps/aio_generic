#!/bin/sh

revision="aio generic v0.1.0 (2022-07-08 MIB-Wiki)"
# use --help for more info

export PATH=:/proc/boot:/sbin:/bin:/usr/bin:/usr/sbin:/net/mmx/bin:/net/mmx/usr/bin:/net/mmx/usr/sbin:/net/mmx/sbin:/net/mmx/mnt/app/armle/bin:/net/mmx/mnt/app/armle/sbin:/net/mmx/mnt/app/armle/usr/bin:/net/mmx/mnt/app/armle/usr/sbin
export LD_LIBRARY_PATH=/net/mmx/mnt/app/root/lib-target:/net/mmx/mnt/eso/lib:/net/mmx/eso/lib:/net/mmx/mnt/app/usr/lib:/net/mmx/mnt/app/armle/lib:/net/mmx/mnt/app/armle/lib/dll:/net/mmx/mnt/app/armle/usr/lib
export IPL_CONFIG_DIR=/etc/eso/production

thisname="$(basename $0)"
thisdir="$(dirname $0)"

if [ -z $LOG ]; then
	. $thisdir/../config/GLOBALS
	echo -ne "\n$ME-$thisname---->\n" >> $LOG
fi

if [ -f $TMP/backup.mib ] || [ -f $TMP/reboot.mib ] || [ -f $TMP/flash.mib ]; then
	echo "Backup or reboot is already running..."
	return 2> /dev/null
fi

case $1 in

-all) {

trap '' 2

mount -uw $VOLUME
mount -uw /net/mmx/mnt/app

echo "[finalScriptSequence] running..." | $TEE -a $LOG

#Remove Swdlautorun.txt from SD to avoid update loop
if [ -f $VOLUME/Swdlautorun.txt ]; then
	if [ -f $VOLUME/_Swdlautorun.txt ]; then
		rm -f $VOLUME/_Swdlautorun.txt
		echo "-- _Swdlautorun.txt removed" | $TEE -a $LOG
	fi
	mv -f $VOLUME/Swdlautorun.txt $VOLUME/_Swdlautorun.txt 2>> $LOG
	echo "-- Swdlautorun.txt disabled" | $TEE -a $LOG
else
	if [ -f $VOLUME/_Swdlautorun.txt ]; then
		echo "-- _Swdlautorun.txt found" | $TEE -a $LOG
		echo "-- autostart already disabled" | $TEE -a $LOG
	else
		echo "-- Swdlautorun.txt & _Swdlautorun.txt not found" | $TEE -a $LOG
	fi
fi

#Replace ExceptionList and remove related SWDL meta files
cp $VOLUME/common/tools/0/default/ExceptionList.txt /HBpersistence/FEC 2>> $LOG
rm -f /net/rcc/mnt/efs-persist/FEC/ExceptionList.txt.SWDL.compatibility.txt
rm -f /net/rcc/mnt/efs-persist/FEC/ExceptionList.txt.SWDL.version.txt
rm -f /net/rcc/mnt/efs-persist/SWDL/MainUnit-version2.txt.SWDL.compatibility.txt
echo "-- ExceptionList restored and SWDL cleaned" | $TEE -a $LOG

#Clear illeagl and withdrawn FECs
rm -f /net/rcc/mnt/efs-persist/FEC/IllegalFecContainer.fec 2>> $LOG
rm -f /net/rcc/mnt/efs-persist/FEC/WithdrawnFecContainer.fec 2>> $LOG
echo "-- Illegal and withdrawn FECs removed" | $TEE -a $LOG

#Adaptions CP/AA/GEM
on -f mmx $PC b:0:3221356628:7.7 1 2>> $LOG
on -f mmx $PC b:0:3221356628:8.0 1 2>> $LOG
on -f mmx $PC b:0:3221356628:8.5 1 2>> $LOG
on -f mmx $PC i:0:1343769792 3 2>> $LOG
on -f mmx $PC b:0:3221356557:0 1 2>> $LOG
echo "-- CarPlay, AndroidAuto, Mirrorlink and Development Mode activated" | $TEE -a $LOG

sleep 2
on -f mmx $PC b:0:1 0 2>> $LOG
echo "-- Write coding to persistence" | $TEE -a $LOG
sleep 2

#Add M.I.B. link to GEM
on -f mmx rm -rf /eso/hmi/engdefs/z_Launcher-sda0.esd 2>> $LOG
on -f mmx ln -s /net/mmx/fs/sda0/esd/Launcher-sda0.esd /eso/hmi/engdefs/z_Launcher-sda0.esd 2>> $LOG
echo "-- M.I.B link to GEM installed" | $TEE -a $LOG

echo "[finalScriptSequence] completed\n"  | $TEE -a $LOG

trap 2

return 2> /dev/null

};;

# help or unknown parameter ------------------------------
	*) {
		echo ""
		echo $revision
		echo ""
		echo "Usage: "$thisname" [OPTION]"
		echo ""
		echo "Options:"
		echo "        -all 			all generic AIO code is executed"
		echo ""
		echo "This program is free software; you can redistribute it and/or"
		echo "modify it under the terms of the GNU General Public License"
		echo "as published by the Free Software Foundation; either version 2"
		echo "of the License, or (at your option) any later version."
		echo ""
		echo "This program is distributed in the hope that it will be useful,"
		echo "but WITHOUT ANY WARRANTY; without even the implied warranty of"
		echo "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
		echo "See the GNU General Public License for more details."
		echo ""
		echo "You should have received a copy of the GNU General Public License"
		echo "along with this program; if not, write to the Free Software Foundation,"
		echo "Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."
		echo ""
		
	};;
	
	esac

exit 0

