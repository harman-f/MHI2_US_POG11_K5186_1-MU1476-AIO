#!/bin/sh

revision="offset v0.1.1 (2022-01-26 by MIBonk)"
# use --help for more info

export PATH=:/proc/boot:/sbin:/bin:/usr/bin:/usr/sbin:/net/mmx/bin:/net/mmx/usr/bin:/net/mmx/usr/sbin:/net/mmx/sbin:/net/mmx/mnt/app/armle/bin:/net/mmx/mnt/app/armle/sbin:/net/mmx/mnt/app/armle/usr/bin:/net/mmx/mnt/app/armle/usr/sbin
export LD_LIBRARY_PATH=/net/mmx/mnt/app/root/lib-target:/net/mmx/mnt/eso/lib:/net/mmx/eso/lib:/net/mmx/mnt/app/usr/lib:/net/mmx/mnt/app/armle/lib:/net/mmx/mnt/app/armle/lib/dll:/net/mmx/mnt/app/armle/usr/lib
export IPL_CONFIG_DIR=/etc/eso/production

thisname="$(basename $0)"
thisdir="$(dirname $0)"

if [ $1 = "-log" ];then
	VALUE=LOG
elif [ $1 = "-s" ] || [ $1 = "-S" ];then
	VALUE=SHOW
else
	VALUE=""
fi

if [ -z $LOG ]; then
	. $thisdir/../config/GLOBALS
	echo -ne "\n$ME-$thisname---->\n" >> $LOG
fi

if [ -f $TMP/reboot.mib ]; then
	echo "Reboot running..."
	return 2> /dev/null
fi

IFS2OFFSET() {

# file size ifs-root-part2 with fixed values and compare to flashlock output
STAGE2SIZE="$($FLASHLOCK | grep $OFFSETPART2)"
STAGE2SIZE=$(echo $STAGE2SIZE | awk -v FS="(" '{print $3}' | awk -v FS=")" '{print $1}') 
STAGE2SIZE="00"$(echo "obase=16; $STAGE2SIZE" | $BC)
# ENDIAN Convert...
STAGE2SIZE=$(echo $STAGE2SIZE | $SED "s/.\{2\}/&:/g" | awk '{print toupper($0)}')
BYTE1="$(echo $STAGE2SIZE | cut -d':' -f3)"
BYTE2="$(echo $STAGE2SIZE | cut -d':' -f4)"
BYTE3="$(echo $STAGE2SIZE | cut -d':' -f2)"
BYTE4="$(echo $STAGE2SIZE | cut -d':' -f1)"
STAGE2SIZE=$BYTE2$BYTE1$BYTE3$BYTE4

if [ $VALUE = "SHOW" ];then
echo -ne $MUVERSION" - "$TRAINVERSION" - "
echo -ne "0x00"$OFFSETPART2" - "$STAGE2SIZE"\n\n" | $TEE -a $LOG
else
echo -ne "0x00"$OFFSETPART2" - "$STAGE2SIZE"\n\n" >> $LOG
fi

}

	case $VALUE in

	LOG|SHOW) {

# determine ifs-root-part2 offset...
BASE=0x540000
OFFSET=$($DD bs=4096 skip=1344 count=1 if=$fs0p0 2> /dev/null | $DD bs=4 skip=21 count=1 2> /dev/null | $SED 's/\\/\\\\/g;s/\x0/\\x0/g' | $SED 's/\\x//g');
echo -ne "ifs-root-part2 (ASCII): "$OFFSET"\n" >> $LOG

# determine part2 offset with fixed values and compare to flashlock output
OFFSET1="$($FLASHLOCK | grep "ba0000." | $TEE -a $LOG)"
OFFSET2="$($FLASHLOCK | grep "c20000." | $TEE -a $LOG)"
OFFSET3="$($FLASHLOCK | grep "c00000." | $TEE -a $LOG)"
OFFSET4="$($FLASHLOCK | grep "be0000." | $TEE -a $LOG)"
OFFSET5="$($FLASHLOCK | grep "bc0000." | $TEE -a $LOG)"

if [[ "$OFFSET1" != "" && "$OFFSET2" = "" && "$OFFSET3" = "" && "$OFFSET4" = "" && "$OFFSET5" = "" ]]; then
	OFFSETPART2=ba0000
	SKIPBLOCKS=2976
	IFS2OFFSET
elif [[ "$OFFSET2" != "" && "$OFFSET1" = "" && "$OFFSET3" = "" && "$OFFSET4" = "" && "$OFFSET5" = "" ]]; then
	OFFSETPART2=c20000
	SKIPBLOCKS=3104
	IFS2OFFSET
elif [[ "$OFFSET3" != "" && "$OFFSET1" = "" && "$OFFSET2" = "" && "$OFFSET4" = "" && "$OFFSET5" = "" ]]; then
	OFFSETPART2=c00000
	SKIPBLOCKS=3072
	IFS2OFFSET
elif [[ "$OFFSET4" != "" && "$OFFSET1" = "" && "$OFFSET2" = "" && "$OFFSET3" = "" && "$OFFSET5" = "" ]]; then
	OFFSETPART2=be0000
	SKIPBLOCKS=3040
	IFS2OFFSET
elif [[ "$OFFSET5" != "" && "$OFFSET1" = "" && "$OFFSET2" = "" && "$OFFSET3" = "" && "$OFFSET4" = "" ]]; then
	OFFSETPART2=bc0000
	SKIPBLOCKS=3008
	IFS2OFFSET
else
	OFFSETPART2="failed"
	SKIPBLOCKS=""
	echo -ne "Can't find ifs-root-part2 offset, firmware not supported!\n" | $TEE -a $LOG
	echo -ne "Backup will continue. A patch will not be avilable (yet)\n" | $TEE -a $LOG
	echo -ne "Upload your backup to mibsolution\n" | $TEE -a $LOG
	sleep 5
	echo -ne "Backup will start now, but will throw errors\n" | $TEE -a $LOG
	echo -ne "due to unknown ifs-root stage 2 offset\n" | $TEE -a $LOG
	sleep 5
fi

return 2> /dev/null

	};;

	# help or unknown parameter ------------------------------
	*) {
		echo ""
		echo $revision
		echo ""
		echo "Usage: "$thisname" [OPTION]"
		echo ""
		echo "Options:"
		echo "        -log	 		write OFFSET's only to Log"
		echo "        -s,-S	 		show OFFSET's"
		echo "        --help			show this help"
		echo ""
		echo "This program is free software; you can redistribute it and/or"
		echo "modify it under the terms of the GNU General Public License"
		echo "as published by the Free Software Foundation; either version 2"
		echo "of the License, or (at your option) any later version."
		echo ""
		echo "This program is distributed in the hope that it will be useful,"
		echo "but WITHOUT ANY WARRANTY; without even the implied warranty of"
		echo "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
		echo "See the GNU General Public License for more details."
		echo ""
		echo "You should have received a copy of the GNU General Public License"
		echo "along with this program; if not, write to the Free Software Foundation,"
		echo "Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."
		echo ""
		
	};;

	esac

exit 0

